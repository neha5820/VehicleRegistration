swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Vehicle Registration"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
  - name: "registrations"
    description: "Everything about your Pets"
    externalDocs:
      description: "Find out more"
      url: "http://swagger.io"
schemes:
  - "https"
  - "http"
paths:

  /registrations/findAll:
    get:
      tags:
        - "registrations"
      summary: "Finds cars by numberplate"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "findAllVehicle"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "status"
          in: "query"
          description: "Status values that need to be considered for filter"
          required: true
          type: "array"
          items:
            type: "string"
            enum:
              - "available"
              - "pending"
              - "sold"
            default: "available"
          collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Registrations"
        "400":
          description: "Invalid status value"


definitions:
  Registrations:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      number_plate:
        type: "string"
      insurer:
        $ref: "#/definitions/Insurer"
      vehicle:
        $ref: "#/definitions/Vehicle"
  Vehicle:
    type: "object"
    properties:

      vehicle_type:
        type: "string"
      make:
        type: "string"
      model:
        type: "string"
      color:
        type: "string"
  Insurer:
    type: "object"
    properties:

      name:
        type: "string"
      code:
        type: "string"
